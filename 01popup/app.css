@font-face {
    font-family: "nanumgothic";
    src: url("../commons/fonts/NanumGothicCoding-Regular.ttf") format("truetype");
}

* {
    font-family: "nanumgothic", sans-serif;
    margin:0;
    padding: 0;
}

body {
    position: fixed;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    background-color: rgb(223, 223, 223);
}

.container {
	margin-top:40px;
}
.container > .header {
	margin-bottom:20px;
}

.btn {
    border:1px solid transparent;
    padding: 0.25rem 0.75rem;
    border-radius: 0.2rem;
}

.btn.btn-blue {
    background-color: rgb(55, 37, 214);
    border:1px solid rgb(40, 22, 204);
    color:#fff;
}

.btn-lg {
    font-size:30px;
    padding: 0.65rem 1.25rem;
}

#btnOpen {
    position: absolute;
    top:20px;
    right:20px;
}

/* modal style */
html.modal-active,
body.modal-active {
	overflow: hidden;
}
#modal-container {
	position: fixed;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
	z-index: 1;
	/* hidden 처리 */
	transform: scale(0);
}
#modal-container .modal-background {
	background: rgba(0, 0, 0, .8);
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
	width: 100%;
}
#modal-container .modal-background .modal {
	background: #fff;
	padding: 50px;
	display: inline-block;
	border-radius: 3px;
	position: relative;
}
#modal-container .modal-background .modal h2 {
	font-size: 25px;
	line-height: 25px;
	margin-bottom: 15px;
}
#modal-container .modal-background .modal p {
	font-size: 18px;
	line-height: 22px;
}

/* cubic-bezier 는 조절점 2개의 x,y 좌표를 말한다.*/
/* https://matthewlein.com/tools/ceaser */
/* unfolding관련  */
#modal-container.unfold {
	/*transform: scaleX(0) scaleY(1);*/
	animation: unfoldIn 1s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
#modal-container.unfold .modal-background .modal {
	/* 초기 display: none 처럼 크기를 0 으로 하여 보여주지 않음*/
	transform: scale(0);
	/* 0.5 초 동안 애니메이션을 실행, 단 0.8초 지연시켜 0.8초 후에 애니메이션을 실행 */
	animation: zoomIn .5s .8s  cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
#modal-container.unfold.out {
	transform: scale(1);
	animation: unfoldOut 1s .3s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
#modal-container.unfold.out .modal-background .modal {
	animation: zoomOut 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
/* Dimmed showing */
@keyframes unfoldIn {
	0% {
		transform: scaleX(0) scaleY(0.005);
	}
	50% {
		/* 0.5 초간 세로 크기는 작은상태로 가로 너비만 확대  */
		transform: scaleX(1) scaleY(0.005);
	}
	100% {
		/* 0.5 초간 세로 크기를 확대 */
		transform: scaleY(1) scaleX(1);
	}
}
/* Show modal content  */
@keyframes zoomIn {
	from {
		transform: scale(0);
	}
	to {
		transform: scale(1);
	}
}
/* Hide modal content */
@keyframes zoomOut {
	from {
		transform: scale(1);
	}
	to {
		transform: scale(0);
	}
}
/* Dimmed hiding */
@keyframes unfoldOut {
	0% {
		transform: scale(1)
	}
	50% {
		transform: scaleX(1) scaleY(0.005);
	}
	100% {
		transform: scaleX(0) scaleY(0.005);
	}
}


/*
 * ------------------------------
 * Revealing Animation
 * ------------------------------
 */
#modal-container.revealing {
	transform: scale(1);
}
#modal-container.revealing .modal-background {
	background: transparent;
	animation: fadeIn .5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
#modal-container.revealing .modal-background .modal {
	/* 콘텐츠를 초기에 보여주지 않음 */
	opacity: 0;
	animation: scaleUp 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
.container.revealing {
	/* 콘텐츠 크기를 줄임 */
	animation: scaleBack 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
#modal-container.revealing.out {
	/* 전체 모달 컨테이너를 숨김 처리(다른 애니메이션이 모두 끝난 0.5초 후에 처리하기 위해 0.5초 지연시킴 */
	animation: quickScaleDown 0s .5s linear forwards;
}
#modal-container.revealing.out .modal-background {
	animation: fadeOut 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
#modal-container.revealing.out .modal-background .modal {
	animation: scaleDown 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
.container.revealing.out {
	animation: scaleForward 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
/* Dimmed showing */
@keyframes fadeIn {
	0% {
		background: transparent;
	}
	100% {
		background: rgba(0, 0, 0, .7);
	}
}
/* Show modal content from bottom to top */
@keyframes scaleUp {
	0% {
		/* 모달 콘텐츠를 하단에 위치시킴 */
		transform: scale(.8) translateY(1000px);
		opacity: 0;
	}
	100% {
		/* 모달 콘텐츠를 본래 위치로 돌려놓음 */
		transform: scale(1) translateY(0);
		opacity: 1;
	}
}
/* Shrink content */
@keyframes scaleBack {
	0% {
		transform: scale(1);
	}
	100% {
		transform: scale(.8);
	}
}
/* Hide modal container*/
@keyframes quickScaleDown {
	0% {
		transform: scale(1);
	}
	99.9% {
		transform: scale(1);
	}
	100% {
		transform: scale(0);
	}
}
/* Dimmed hiding */
@keyframes fadeOut {
	0% {
		background: rgba(0, 0, 0, .7);
	}
	100% {
		background: transparent;
	}
}
/* modal content from top to bottom */
@keyframes scaleDown {
	0% {
		transform: scale(1) translateY(0);
		opacity: 1;
	}
	100% {
		transform: scale(.8) translateY(1000px);
		opacity: 0;
	}
}

@keyframes scaleBack {
	0% {
		transform: scale(1);
	}
	100% {
		transform: scale(.85);
	}
}
@keyframes scaleForward {
	0% {
		transform: scale(0.85);
	}
	100% {
		transform: scale(1);
	}
}




/*
 * ------------------------------
 * Meep Meep Animation
 * ------------------------------
 */
 #modal-container.meep {
	transform: scale(1);
}

#modal-container.meep .modal-background {
	background: transparent;
	animation: fadeIn 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
#modal-container.meep .modal-background .modal {
	transform: translateX(-1500px);
	animation: roadRunnerIn 0.3s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
#modal-container.meep.out {
	animation: quickScaleDown 0s .5s linear forwards;
}
#modal-container.meep.out .modal-background {
	animation: fadeOut 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
#modal-container.meep.out .modal-background .modal {
	animation: roadRunnerOut 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}
/* 모달 콘텐츠 반동 효과로 나타나기 */
@keyframes roadRunnerIn {
	0% {
		transform: translateX(-1500px) skewX(30deg) scaleX(1.3);
	}
	70% {
		transform: translateX(50px) skewX(0deg) scaleX(0.9);
	}
	100% {
		transform: translateX(0px) skewX(0deg) scaleX(1);
	}
}
/* 모달 콘텐츠 반동 효과로 숨기기 */
@keyframes roadRunnerOut {
	0% {
		transform: translateX(0px) skewX(0deg) scaleX(1);
	}
	30% {
		transform: translateX(-100px) skewX(-5deg) scaleX(0.9);
	}
	100% {
		transform: translateX(1500px) skewX(30deg) scaleX(1.3);
	}
}